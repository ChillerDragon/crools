#!/bin/bash
# crackman - your favorite unorganized crack manager
# its like a package manager but its crack

MIRROR=https://zillyhuhn.com/crack
CM_BIN_PATH="$HOME/.config/crools/crackman/bin"
CM_TMP_PATH="$HOME/.config/crools/crackman/tmp"

declare -A Packages=(
	[clang-format-10]='https://github.com/muttleyxd/clang-tools-static-binaries/releases/download/master-f3a37dd2/clang-format-10_linux-amd64'
	[clang-format-11]='https://github.com/muttleyxd/clang-tools-static-binaries/releases/download/master-f3a37dd2/clang-format-11_linux-amd64'
	[clang-format-12]='https://github.com/muttleyxd/clang-tools-static-binaries/releases/download/master-f3a37dd2/clang-format-12_linux-amd64'
	[clang-format-13]='https://github.com/muttleyxd/clang-tools-static-binaries/releases/download/master-f3a37dd2/clang-format-13_linux-amd64'
	[clang-format-14]='https://github.com/muttleyxd/clang-tools-static-binaries/releases/download/master-f3a37dd2/clang-format-14_linux-amd64'
	[term-ux]='https://github.com/chillerbot/chillerbot-ux/releases/download/v0.0.3/term-ux-linux'
)

function show_help() {
	echo "usage: $(tput bold)crackman [install|upgrade|search|list] [ARGS...]$(tput sgr0)"
	echo "install:       takes package names as arg"
	echo "remove:        takes package names as arg"
	echo "upgrade:       takes package names as arg"
	echo "purge:         takes no args and deletes all packages"
	echo "search-local:  takes a regex as arg"
	echo "search-remote: takes a regex as arg"
	echo "list-local:    takes no arguments and lists all packages"
	echo "list-remote:   takes no arguments and lists all packages"
	exit 0
}

function is_apple() {
	if [[ "$OSTYPE" == "darwin"* ]]
	then
		return 0
	fi
	return 1
}

function err() {
	echo "[!] $1"
}

function log() {
	echo "[*] $1"
}

function cm_doctor() {
	local shellrc
	if [ ! -d "$CM_BIN_PATH" ]
	then
		mkdir -p "$CM_BIN_PATH" || exit 1
	fi
	if [ ! -d "$CM_TMP_PATH" ]
	then
		mkdir -p "$CM_TMP_PATH" || exit 1
	fi
	if ! echo "$PATH" | grep -q "$CM_BIN_PATH" 
	then
		shellrc=~/.bashrc
		if is_apple
		then
			shellrc=~/.bash_profile
		fi
		if grep -q "$CM_BIN_PATH" "$shellrc"
		then
			err "PATH error restart your shell"
			exit 1
		else
			echo "export PATH=\"\$PATH:$CM_BIN_PATH\"" >> "$shellrc"
		fi
	fi
	if [ ! -x "$(command -v wget)" ]
	then
		err "missing depedency wget"
		exit 1
	fi
}

function cm_check_pack() {
	local pack=$1
	if [[ ! "$pack" =~ ^[0-9a-zA-Z_-]*$ ]]
	then
		err "invalid package name '$pack'"
		exit 1
	fi
	wget -O "$CM_TMP_PATH/LISTING" "$MIRROR/LISTING"
	if ! grep -q "^$pack " "$CM_TMP_PATH/LISTING"
	then
		if [ "${Packages[$pack]}" != "" ]
		then
			return 1
		fi
		err "no such package '$pack'"
		exit 1
	fi
	return 0
}

function cm_install() {
	local pack=$1
	local url=0
	cm_doctor
	if [ "$1" == "" ]
	then
		err "install requires a package name"
		exit 1
	fi
	if [ -f "$CM_BIN_PATH/$pack" ]
	then
		log "'$pack' is installed already"
		exit 0
	fi
	local p
	local full_path
	local dir_path
	full_path="$(realpath "$0")"
	dir_path="$(dirname "$full_path")"
	if [ -f "$dir_path"/packages/"$pack" ]
	then
		"$dir_path"/packages/"$pack"
		exit "$?"
	fi
	if cm_check_pack "$pack"
	then
		if wget -O "$CM_BIN_PATH/$pack" "$MIRROR/$pack"
		then
			chmod +x "$CM_BIN_PATH/$pack" || exit 1
			log "installed '$pack'"
		else
			err "failed to install '$pack'"
		fi
	else
		if wget -O "$CM_BIN_PATH/$pack" "${Packages[$pack]}"
		then
			chmod +x "$CM_BIN_PATH/$pack" || exit 1
			log "installed '$pack'"
		else
			err "failed to install '$pack'"
		fi
	fi
}

function cm_remove() {
	local pack=$1
	cm_doctor
	cm_check_pack "$pack"
	if [ "$1" == "" ]
	then
		err "remove requires a package name"
		exit 1
	fi
	if [ ! -f "$CM_BIN_PATH/$pack" ]
	then
		err "package is not installed"
		exit 1
	fi
	rm "$CM_BIN_PATH/$pack" || exit 1
	log "removed '$pack'"
}

function list_remote() {
	local name
	local desc
	local listfile
	listfile="$CM_TMP_PATH/LISTING"
	cm_doctor
	wget -O "$listfile" "$MIRROR/LISTING"
	if [ ! -f "$listfile" ]
	then
		err "list file not found '$listfile'"
		exit 1
	fi
	while read -r line
	do
		name="${line%% *}"
		desc="${line#*$name }"
		echo "$(tput bold)$name$(tput sgr0)"
		echo "  $desc"
	done < "$listfile"
}

if [ "$1" == "help" ] || [ "$1" == "--help" ] || [ "$1" == "-h" ]
then
	show_help
elif [ "$1" == "install" ]
then
	cm_install "$2"
elif [ "$1" == "remove" ]
then
	cm_remove "$2"
elif [ "$1" == "list-local" ]
then
	ls "$CM_BIN_PATH"
elif [ "$1" == "list-remote" ]
then
	list_remote
elif [ "$1" == "purge" ]
then
	for p in "$CM_BIN_PATH"/*
	do
		if [ "$(basename "$p")" == "*" ]
		then
			err "no packages installed"
			exit 1
		fi
		cm_remove "$(basename "$p")"
	done
else
	show_help
fi

# #!/bin/bash
# # crackman_listing.sh - running on mirror server
# if [ ! -f LISTING ]
# then
#     touch LISTING
# fi
# for pack in ./*
# do
#     p="${pack:2}"
#     if [ "$p" == "$(basename "$0")" ] || [ "$p" == "LISTING" ]
#     then
#         continue
#     fi
#     if ! grep -q "^$p " LISTING
#     then
#         echo "$p (no description)" >> LISTING
#     fi
# done

