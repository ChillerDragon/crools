#!/bin/bash

help() {
	cat <<-EOF
	usage: mirror_git_repo
	description:
	  creates remotes for the git repo in the current folder
	  and push to them
	  for now only gitlab is supported
	  the remote will be named "gl"
	  and it depends on your ssh config having a
	  gitlab-MIRROR entry
	EOF
}

log() {
	printf '[*] %s\n' "$1"
}
err() {
	printf '[-] %s\n' "$1" 1>&2
}
wrn() {
	printf '[!] %s\n' "$1" 1>&2
}

if [ "$1" == "-h" ] || [ "$1" == "--help" ]
then
	help
	exit 0
fi

is_git_repo() {
	[ -d .git ] || return 1
	return 0
}

check_ssh_config() {
	if grep -q 'Host gitlab-MIRROR' ~/.ssh/config
	then
		return
	fi
	err "Error: this script depends on a 'Host gitlab-MIRROR' entry in your ~/.ssh/config"
	exit 1
}

# extracts the owner/reponame path from the currently active remote
# the same repository name will be used for mirroring
#
# $ git remote -v
# origin  git@github.com:ChillerDragon/crools (fetch)
# origin  git@github.com:ChillerDragon/crools (push)
#
# would then only return "ChillerDragon/crools"
get_main_remote_path() {
	local candidates
	candidates="$(git remote -v |
		grep -v '^gl[[:space:]]' |
		grep ' (push)$' |
		awk '{ print $2 }' |
		cut -d':' -f2)"
	local num_candidates
	num_candidates="$(echo "$candidates" | wc -l)"
	if [ "$num_candidates" -eq 1 ]
	then
		echo "${candidates%.git*}"
		return
	fi
	wrn "Warning: multiple remote candidates found"
	candidates="$(echo "$candidates" | head -n1)"
	echo "${candidates%.git*}"
}

check_ssh_key() {
	if [ -f ~/.ssh/ChillerMirror/id_rsa.pub ]
	then
		return
	fi
	err "Error: ssh key not found please run those commands"
	cat <<-EOF

	mkdir -p ~/.ssh/ChillerMirror/
	ssh-keygen -f ~/.ssh/ChillerMirror/id_rsa -N ''

	EOF
	exit 1
}

main() {
	if ! is_git_repo
	then
		err "Error: your current directory is not a git repo"
		exit 1
	fi
	check_ssh_config
	check_ssh_key
	local remote_path
	remote_path="$(get_main_remote_path)"
	local remote_owner
	remote_owner="$(echo "$remote_path" | cut -d'/' -f1)"
	if [ "$remote_owner" != ChillerDragon ]
	then
		err "Error: this repository is not owned by ChillerDragon"
		err "       currently only mirroring from ChillerDragon owned repos"
		err "       is supported"
		err ""
		err "    expected: ChillerDragon"
		err "         got: $remote_owner"
		err ""
		exit 1
	fi
	local repo_path
	repo_path="$(echo "$remote_path" | cut -d'/' -f2-)"
	if echo "$repo_path" | grep -qF '/'
	then
		err "Error: the repository name contains slashes that is not supported yet"
		exit 1
	fi
	if [ "$repo_path" = "" ]
	then
		err "Error: the repository path is empty something went wrong"
		exit 1
	fi

	local gl_remote
	gl_remote="git@gitlab-MIRROR:ChillerMirror/$repo_path"
	local current_gl_remote
	current_gl_remote="$(git remote -v | grep '^gl[[:space:]]' | awk '{ print $2 }' | head -n1)"
	current_gl_remote="${current_gl_remote%.git*}"
	if [ "$current_gl_remote" = "" ]
	then
		git remote add gl "$gl_remote"
	elif [ "$current_gl_remote" != "$gl_remote" ]
	then
		err "Error: a remote with the name gl already exists"
		err "       and it points to something else"
		err ""
		err "   expected: $gl_remote"
		err "        got: $current_gl_remote"
		err ""
		exit 1
	else
		log "remote was already set"
	fi
	if ! git branch | grep -qF '* master'
	then
		err "Error: master branch not found"
		err "       only mirroring master branch"
		err "       is supported for now"
		exit 1
	fi
	if ! git push gl master
	then
		err "Error: failed to push to $gl_remote"
		exit 1
	fi
	log "Code is now backed up to https://gitlab.com/ChillerMirror/$repo_path"
}

main

